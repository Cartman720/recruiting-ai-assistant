// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Industry {
  id          String     @id @default(cuid())
  name        String     @unique
  slug        String     @unique
  description String
  parent      Industry?  @relation("IndustryHierarchy", fields: [parentId], references: [id])
  parentId    String?
  children    Industry[] @relation("IndustryHierarchy")
  candidates  Candidate[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Candidate {
  id          String       @id @default(cuid())
  name        String
  email       String       @unique
  summary     String
  experiences Experience[]
  education   Education[]
  industries  Industry[]
  skills      String[]
  rawResume   String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Experience {
  id          String   @id @default(cuid())
  company     String
  title       String
  startDate   DateTime?
  endDate     DateTime?
  description String
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Education {
  id          String   @id @default(cuid())
  school      String
  degree      String
  startDate   DateTime?
  endDate     DateTime?
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
